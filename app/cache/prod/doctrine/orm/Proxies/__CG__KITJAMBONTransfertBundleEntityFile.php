<?php

namespace Proxies\__CG__\KITJAMBON\TransfertBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class File extends \KITJAMBON\TransfertBundle\Entity\File implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileId', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileNom', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileMime', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileTaille', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileAnnee', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileTypedoc', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileValide', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileNbVues', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileNbLike', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileNbDislike', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'gradeId', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'optionId');
        }

        return array('__isInitialized__', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileId', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileNom', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileMime', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileTaille', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileAnnee', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileTypedoc', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileValide', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileNbVues', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileNbLike', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'fileNbDislike', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'gradeId', '' . "\0" . 'KITJAMBON\\TransfertBundle\\Entity\\File' . "\0" . 'optionId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (File $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setFileId($fileId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileId', array($fileId));

        return parent::setFileId($fileId);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getFileId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileId', array());

        return parent::getFileId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileNom($fileNom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileNom', array($fileNom));

        return parent::setFileNom($fileNom);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileNom', array());

        return parent::getFileNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileMime($fileMime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileMime', array($fileMime));

        return parent::setFileMime($fileMime);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileMime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileMime', array());

        return parent::getFileMime();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileTaille($fileTaille)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileTaille', array($fileTaille));

        return parent::setFileTaille($fileTaille);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileTaille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileTaille', array());

        return parent::getFileTaille();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileAnnee($fileAnnee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileAnnee', array($fileAnnee));

        return parent::setFileAnnee($fileAnnee);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileAnnee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileAnnee', array());

        return parent::getFileAnnee();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileTypedoc($fileTypedoc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileTypedoc', array($fileTypedoc));

        return parent::setFileTypedoc($fileTypedoc);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileTypedoc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileTypedoc', array());

        return parent::getFileTypedoc();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileValide($fileValide)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileValide', array($fileValide));

        return parent::setFileValide($fileValide);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileValide()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileValide', array());

        return parent::getFileValide();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileNbVues($fileNbVues)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileNbVues', array($fileNbVues));

        return parent::setFileNbVues($fileNbVues);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileNbVues()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileNbVues', array());

        return parent::getFileNbVues();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileNbLike($fileNbLike)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileNbLike', array($fileNbLike));

        return parent::setFileNbLike($fileNbLike);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileNbLike()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileNbLike', array());

        return parent::getFileNbLike();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileNbDislike($fileNbDislike)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileNbDislike', array($fileNbDislike));

        return parent::setFileNbDislike($fileNbDislike);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileNbDislike()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileNbDislike', array());

        return parent::getFileNbDislike();
    }

    /**
     * {@inheritDoc}
     */
    public function setGradeId($gradeId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGradeId', array($gradeId));

        return parent::setGradeId($gradeId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGradeId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGradeId', array());

        return parent::getGradeId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptionId($optionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptionId', array($optionId));

        return parent::setOptionId($optionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptionId', array());

        return parent::getOptionId();
    }

}
